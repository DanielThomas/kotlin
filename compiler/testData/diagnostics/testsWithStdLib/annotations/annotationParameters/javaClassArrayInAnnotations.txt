package

public final annotation class A : kotlin.Annotation {
    public constructor A(/*0*/ vararg value: java.lang.Class<*> /*kotlin.Array<out java.lang.Class<*>>*/ = ..., /*1*/ arg: kotlin.Array<java.lang.Class<*>> = ...)
    public constructor A(/*0*/ vararg value: kotlin.reflect.KClass<*> /*kotlin.Array<out kotlin.reflect.KClass<*>>*/ = ..., /*1*/ arg: kotlin.Array<kotlin.reflect.KClass<*>> = ...)
    public abstract fun arg(): kotlin.Array<kotlin.reflect.KClass<*>>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    public abstract fun value(): kotlin.Array<kotlin.reflect.KClass<*>>
}

A(arg = {kotlin.String.class, kotlin.Double.class}: kotlin.Array<java.lang.Class<*>>, value = {kotlin.Int.class, kotlin.Any.class}: kotlin.Array<out java.lang.Class<*>>) internal final class MyClass1 {
    public constructor MyClass1()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

A(value = {kotlin.Int.class, kotlin.Any.class}: kotlin.Array<out java.lang.Class<*>>) internal final class MyClass2 {
    public constructor MyClass2()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

A(arg = {kotlin.String.class, kotlin.Double.class}: kotlin.Array<java.lang.Class<*>>) internal final class MyClass3 {
    public constructor MyClass3()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

A() internal final class MyClass4 {
    public constructor MyClass4()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

A(arg = {kotlin.String.class, kotlin.Double.class}: kotlin.Array<java.lang.Class<*>>, value = {kotlin.Int.class, kotlin.Any.class}: kotlin.Array<java.lang.Class<out kotlin.Any>>) internal final class MyClass5 {
    public constructor MyClass5()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

A(value = {kotlin.Int.class, kotlin.Any.class}: kotlin.Array<java.lang.Class<out kotlin.Any>>) internal final class MyClass6 {
    public constructor MyClass6()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
